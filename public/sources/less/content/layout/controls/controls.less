
//== Controls
.vcv-ui-outline-controls-wrapper {
  overflow: hidden;

  .vcv-ui-outline-control-dropdown-content {
    position: absolute;
  }
  .vcv-ui-outline-control-dropdown-active {
    .vcv-ui-outline-control-dropdown-content {
      visibility: visible;
      opacity: 1;
      transition: visibility 0s, opacity @transition-duration @transition-timing-function;
    }
  }
}

.vcv-ui-outline-controls-container {
  position: absolute;
  z-index: @controls-z-index;
  pointer-events: none;
  &:hover {
    z-index: @controls-z-index-hover;
  }
  > .vcv-ui-outline-controls {
    > * {
      background-color: @controls-background-color-base;
    }
    > :first-child {
      border-top-left-radius: @control-border-radius;
      border-bottom-left-radius: @control-border-radius;
    }
    > :last-child {
      border-top-right-radius: @control-border-radius;
      border-bottom-right-radius: @control-border-radius;
    }
  }
}

.vcv-ui-outline-controls {
  font-size: @controls-text-size-base;
  line-height: @controls-text-size-base;
  display: flex;
  flex-wrap: nowrap;
  flex-direction: row;
  pointer-events: all;
  position: absolute;
  left: 0;
  bottom: 100%;
  padding: @controls-outline-size;
  margin-bottom: -1px;
  > * {
    flex-grow: 0;
    flex-shrink: 0;
    &:hover {
      .vcv-ui-outline-control {
        border-top-left-radius: @control-border-radius;
        border-top-right-radius: @control-border-radius;
      }
    }
  }

  > .vcv-ui-outline-control-simple:hover {
    .vcv-ui-outline-control {
      border-radius: @control-border-radius;
    }
  }
}
.vcv-ui-outline-control-separator {
  color: @controls-text-color-base;
  background-color: @controls-background-color-base;
  position: relative;
  width: 10px;
  &::before {
    position: absolute;
    top: 50%;
    left: 50%;
    opacity: 0.3;
    font-size: 14px;
    transform: translate(-50%, -50%);
  }
}
.vcv-ui-outline-control {
  padding: 0;
  overflow: hidden;
  min-width: @control-size;
  min-height: @control-size;
  text-decoration: none;
  color: @controls-text-color-base;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  text-align: center;
  cursor: pointer;
  transition: all @transition-duration @transition-timing-function;

  &[disabled] {
    opacity: .5;
    cursor: not-allowed;
  }
}

.vcv-ui-outline-control-content {
  white-space: nowrap;

  display: flex;
  flex-wrap: nowrap;
  flex-direction: row;
  align-items: center;
  > * {
    flex-grow: 0;
    flex-shrink: 0;
  }
  > .vcv-ui-outline-control-icon {
    width: @control-size - 8px;
    height: @control-size - 8px;
    margin: 4px;
  }

  &[disabled] {
    opacity: .5;
    cursor: not-allowed;
  }
}

.vcv-ui-outline-control-icon {
  position: relative;
  width: @control-size;
  height: @control-size;
  text-align: center;
  &::before {
    font-size: 1.25em; // todo: move to variable
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

//== Dropdown
.vcv-ui-outline-control-dropdown {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  position: relative;
  line-height: inherit;
  margin: 0;
  > * {
    flex-grow: 0;
    flex-shrink: 0;
  }

  &:not(.vcv-ui-outline-control-dropdown-o-drop-up):hover {
    .vcv-ui-outline-control-dropdown-trigger.vcv-ui-outline-control {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
}

.vcv-ui-outline-control-dropdown-trigger {
  line-height: inherit;
  margin: 0;
  padding: 0;
  display: block;
  cursor: move;
}

.vcv-ui-outline-control-dropdown-non-draggable .vcv-ui-outline-control-dropdown-trigger {
  cursor: default;
}

.vcv-ui-outline-control-dropdown-content {
  display: block;
  line-height: inherit;
  margin: 0;
  padding: 0;
  min-width: @controls-dropdown-size;
  position: fixed;
  top: 100%;
  left: 0;
  z-index: @controls-dropdown-zindex;
  visibility: hidden;
  opacity: 0;
  transition: visibility 0s, opacity @transition-duration @transition-timing-function;

  .vcv-ui-outline-control {
    border-radius: @control-border-radius;
    text-align: left;
    padding-left: @gold-value / 2;
    padding-right: @gold-value;
    &:hover {
      background-color: darken(@controls-background-color-base, 7%);
    }
    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }
    &:first-child:not(:last-child) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
    &:last-child:not(:first-child) {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
  }
  .vcv-ui-outline-control-icon {
    left: -@gold-value/2;
  }
}

//== Control Types
//== base color
#vcv-ui-outline-controls > .create-type-with-active(base, @controls-text-color-base, @color-base, @control-color-base);
//== section color
#vcv-ui-outline-controls > .create-type-with-active(section, @controls-text-color-base, @color-base, @control-color-section);
//== row color
#vcv-ui-outline-controls > .create-type-with-active(row, @controls-text-color-base, @color-base, @control-color-row);
//== column color
#vcv-ui-outline-controls > .create-type-with-active(column, @controls-text-color-base, @color-base, @control-color-column);
//== element color
#vcv-ui-outline-controls > .create-type-with-active(element, @controls-text-color-base, @color-base, @control-color-element);

//== todo: refactor, color is based on react components
#vcv-ui-outline-controls > .create-type-with-active(index-0, @controls-text-color-base, @color-base, @control-color-row);
#vcv-ui-outline-controls > .create-type-with-active(index-1, @controls-text-color-base, @color-base, @control-color-column);
#vcv-ui-outline-controls > .create-type-with-active(index-2, @controls-text-color-base, @color-base, @control-color-element);

#vcv-ui-outline-controls > .create-type-right-click-with-active(index-0, @controls-text-color-base, @control-color-row, @control-color-row);
#vcv-ui-outline-controls > .create-type-right-click-with-active(index-1, @controls-text-color-base, @control-color-column, @control-color-column);
#vcv-ui-outline-controls > .create-type-right-click-with-active(index-2, @controls-text-color-base, @control-color-element, @control-color-element);

//== Options
.vcv-ui-outline-controls-container {
  //== controls from left side
  &.vcv-ui-controls-o-controls-left {
    .vcv-ui-outline-controls {
      right: auto;
      left: 0;
    }
  }
  //== controls from left side
  &.vcv-ui-controls-o-controls-right {
    .vcv-ui-outline-controls {
      left: auto;
      right: 0;
    }
  }

}

//== Dropdown options
.vcv-ui-outline-control-dropdown {
  //== dropdown from right side
  &.vcv-ui-outline-control-dropdown-o-drop-right {
    .vcv-ui-outline-control-dropdown-content {
      .vcv-ui-outline-control {
        &:first-child {
          border-top-left-radius: @control-border-radius;
          border-top-right-radius: 0;
        }
      }

      left: auto;
      right: 0;
    }
  }
  //== dropdown from top
  &.vcv-ui-outline-control-dropdown-o-drop-up {
    &:hover {
      .vcv-ui-outline-control-dropdown-trigger.vcv-ui-outline-control {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        border-bottom-left-radius: @control-border-radius;
        border-bottom-right-radius: @control-border-radius;
      }
    }
    .vcv-ui-outline-control-dropdown-content {
      .vcv-ui-outline-control {
        &:first-child {
          border-top-left-radius: @control-border-radius;
          border-top-right-radius: @control-border-radius;
        }
        &:last-child {
          border-bottom-left-radius: 0;
          border-bottom-right-radius: @control-border-radius;
        }
      }
      top: auto;
      bottom: 100%;
      margin: 0; //  0 @controls-space-size 0;
    }
    &.vcv-ui-outline-control-dropdown-o-drop-right {
      .vcv-ui-outline-control-dropdown-content {
        .vcv-ui-outline-control {
          &:last-child {
            border-bottom-left-radius: @control-border-radius;
            border-bottom-right-radius: 0;
          }
        }
      }
    }
  }
}
.vcv-ui-outline-control-more {
  &:hover {
    background-color: @color-base-active;
  }
}

//== Append element control
.vcv-ui-append-control-container {
  position: absolute;
  z-index: @controls-append-z-index;
  pointer-events: none;
  display: flex;
  justify-content: center;
}

.vcv-ui-append-control-wrapper {
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  overflow: hidden;
}

.vcv-ui-append-control {
  background-color: @controls-background-color-base;
  color: @text-color-base;
  pointer-events: all;
  padding: @controls-append-element-padding;
  border-radius: @control-border-radius;
  cursor: pointer;
  transition: background-color @transition-timing-function @transition-duration;
  display: flex;
  align-items: center;
  justify-content: center;

  &:hover {
    background-color: @controls-background-column;
    color: @text-color-base;
  }
}

